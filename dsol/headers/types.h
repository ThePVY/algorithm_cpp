/*!\file
 * \brief Этот файл содержит структуры, макросы и функции, необходимые для работы с дополнительными типами.
 *
 * Copyright(C) НПП Цифровые решения, 2018
 * Copyright(C) Команда разработчиков НПП Цифровые решения
 * Все права защищены.
 *
 * Программное обеспечение, описанное в этом файле, предназначено только для 
 * демонстрационных целей, и предоставляет программистам информацию о продукции 
 * организации "Цифровые решения". Это программное обеспечение поставляется "КАК ЕСТЬ" 
 * без каких-либо гарантий, "Цифровые решения" отказываются от любых гарантий, 
 * фактических или подразумеваемых, включая все подразумеваемые гарантии товарной пригодности, 
 * пригодности для конкретной цели и сохранения прав интеллектуальной собственности. 
 * Организация "Цифровые решения" не несет никакой ответственности за использование 
 * программного обеспечения, не предоставляет лицензий или прав на патент, авторское право, 
 * или любые другие права интеллектуальной собственности, на какие-либо продукты. 
 * Организация "Цифровые решения" оставляет за собой право вносить изменения в программное 
 * обеспечение без уведомления. Организация "Цифровые решения" также не дает никаких 
 * заверений или гарантий, что это программное приложение подойдет для использования 
 * без дальнейшего тестирования или модификаций.
 *
 * Разрешение на использование, копирование, изменение и распространение этого программного 
 * обеспечения и документации предоставляется согласно условиям "Цифровых решений" и 
 * соответствующих авторских прав своей лицензии без оплаты, при условии, 
 * что это программное обеспечение используется совместно с микроконтроллерами организации
 * "Цифровые решения". Эти права должны распространяться во всех копиях этого кода.
 */

#ifndef TYPES_H_
#define TYPES_H_

#include <stdint.h>
#include <stdbool.h>



#define     __RO     volatile const                                             /*!< Регистр только для чтения              */
#define     __WO     volatile                                                   /*!< Регистр только для записи              */
#define     __RW     volatile                                                   /*!< Регистр для чтения/записи              */

/**
 * @brief Макросы для вычисления наибольшего/наименьшего из двух значений
 */
#if !defined(MAX)
#define MAX(a, b) (((a) > (b)) ? (a) : (b))
#endif
#if !defined(MIN)
#define MIN(a, b) (((a) < (b)) ? (a) : (b))
#endif


#define PORT_A 0        ///< Порт A
#define PORT_B 1        ///< Порт B
#define PORT_C 2        ///< Порт C
#define PORT_D 3        ///< Порт D
#define PORT_E 4        ///< Порт E
#define PORT_F 5        ///< Порт F
#define PORT_G 6        ///< Порт G
#define PORT_H 7        ///< Порт H

/**
 * @brief Тип для состояний флагов
 */
typedef enum {RESET = 0, SET = 1} FlagStatus, IntStatus, SetState;
#define PARAM_SETSTATE(State) (((State) == RESET) || ((State) == SET))

/**
 * @brief Тип для функционального состояния
 */
typedef enum {DISABLE = 0, ENABLE = !DISABLE} FunctionalState;
#define PARAM_FUNCTIONALSTATE(State) (((State) == DISABLE) || ((State) == ENABLE))

/**
 * @brief Тип для статуса операции
 */
typedef enum {ERROR = 0, SUCCESS = !ERROR} Status;

#endif