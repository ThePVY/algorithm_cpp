/*!\file
 * \brief Этот файл содержит структуры, макросы и функции, необходимые для взаимодействия с отладочным выводом.
 *
 * Copyright(C) НПП Цифровые решения, 2018
 * Copyright(C) Команда разработчиков НПП Цифровые решения
 * Все права защищены.
 *
 * Программное обеспечение, описанное в этом файле, предназначено только для 
 * демонстрационных целей, и предоставляет программистам информацию о продукции 
 * организации "Цифровые решения". Это программное обеспечение поставляется "КАК ЕСТЬ" 
 * без каких-либо гарантий, "Цифровые решения" отказываются от любых гарантий, 
 * фактических или подразумеваемых, включая все подразумеваемые гарантии товарной пригодности, 
 * пригодности для конкретной цели и сохранения прав интеллектуальной собственности. 
 * Организация "Цифровые решения" не несет никакой ответственности за использование 
 * программного обеспечения, не предоставляет лицензий или прав на патент, авторское право, 
 * или любые другие права интеллектуальной собственности, на какие-либо продукты. 
 * Организация "Цифровые решения" оставляет за собой право вносить изменения в программное 
 * обеспечение без уведомления. Организация "Цифровые решения" также не дает никаких 
 * заверений или гарантий, что это программное приложение подойдет для использования 
 * без дальнейшего тестирования или модификаций.
 *
 * Разрешение на использование, копирование, изменение и распространение этого программного 
 * обеспечения и документации предоставляется согласно условиям "Цифровых решений" и 
 * соответствующих авторских прав своей лицензии без оплаты, при условии, 
 * что это программное обеспечение используется совместно с микроконтроллерами организации
 * "Цифровые решения". Эти права должны распространяться во всех копиях этого кода.
 */

#ifndef DBG_H_
#define DBG_H_

#include <stdio.h>
#include <string.h>
#include "types.h"   
#include "gpio.h"
#include "uart.h"
#include "chip_5023BC016.h"

extern char dbg_buffer[256];

#define ENABLE_DEBUG_UART                                                       /**< Разрешение использования отладочного UART*/
#define DEBUG_UART_RB_SIZE      1024                                            /**< Размер кольцевого буфера для отладочного вывода */

/**
 * @brief Макросы для использования отладочного выхода
 */
#ifdef ENABLE_DEBUG_UART
#define PRINT(...)                   {snprintf(dbg_buffer,256,__VA_ARGS__); DBG_WriteBuffer(dbg_buffer);  DBG_WriteBuffer("\n");DBG_TX_Flush();}        ///< Печать в СОМ порт
#define PRINTSTREAM(...)             {snprintf(dbg_buffer,256,__VA_ARGS__); DBG_WriteBuffer(dbg_buffer);}                                               ///< Печать в СОМ порт
#define PRINTBUFFER(m,n)             DBG_ShowBuffer(m,n);                                                                                               ///< Печать в СОМ порт
#define SCANCHAR()                   DBG_GetChar();                                                                                                     ///< Печать в СОМ порт символа
#else
#define PRINT(...) 
#define PRINTSTREAM(...)
#define PRINTBUFFER(m,n)             
#endif

/**
 * @brief	Инициализация отладочного UART'а
 */
void DBG_UART_Init(void);
void DBG_UART_Init_Args(UART_T *pUART,uint32_t baud);

/**
 * @brief	Пересылка данных, накопленных в кольцевом буфере, в отладочный UART
 */
void DBG_TX_Process(void);

/**
 * @brief	Вывод всех данных, накопленных в кольцевом буфере, в отладочный UART
 */
void DBG_TX_Flush(void);

/**
 * @brief	Запись строки данных в кольцевой буфер
 * @param	buffer	: Указатель на строку
 */
void DBG_WriteBuffer(char *buffer);

/**
 * @brief	Вывод содержимого массива в отладочный UART
 * @param	buffer	: Указатель на массив
 * @param	length	: Длина данных для вывода
*/
void DBG_ShowBuffer(uint8_t *buffer, uint32_t length);

/**
 * @brief	Получение символа из отладочного UART'а
 * @return	Полученный символ
*/
uint8_t DBG_GetChar(void);

/**
 * @brief	Иницилизация gpio
*/
void gpioInit();

/**
 * @brief	Подача clock для отладочного UART 
*/
void clockInit();



#endif